name: 'Redis Deployment'
description: 'Deploy Redis in an EC2 instance'
inputs:
  prefix:
    description: 'Instance prefix'
    required: true
    default: 'redis-app'
  redis-server:
    description: 'Redis server'
    required: true
  redis-version:
    description: 'Redis version'
    required: true
    default: '6'
  redis-password:
    description: 'Redis password'
    required: true
  event-number:
    description: 'Pull Request number'
    required: true
  ssh-key:
    description: 'Redis instance ssh key'
    required: true
  command:
    description: 'deploy/destroy'
    default: 'deploy'
outputs:
  redis-port:
    description: 'Redis port'
    value: ${{ steps.get-redis-port.outputs.redis-port }}
  redis-url:
    description: 'Database URL'
    value: ${{ steps.get-database-url.outputs.database-url }}
runs:
  using: "composite"
  steps:
    - run: echo "${{ inputs.ssh-key }}" > redis-server.pem
      shell: bash
    - run: chmod 600 redis-server.pem
      shell: bash
    - run: pwd
      shell: bash
    - run: echo "REDIS_PORT=$((30000 + ${{ inputs.event-number }}))" >> "$GITHUB_ENV"
      shell: bash
    - id: get-redis-port
      run: echo "::set-output name=redis-port::$(echo $REDIS_PORT)"
      shell: bash
    - run: ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook ${{ github.action_path }}/deploy-redis.yaml -i ${{ inputs.redis-server }}, --key-file "redis-server.pem" -e "instance_name=${{ inputs.prefix }}-pr-${{ inputs.event-number }}" -e "instance_port=$REDIS_PORT" -e "redis_password=${{ inputs.redis-password }}" -e "redis_version=${{ inputs.redis-version }}" --tags "${{ inputs.command }}"
    - run: echo "REDIS_URL=redis://:${{ inputs.redis-password }}@${{ inputs.redis-server }}:$REDIS_PORT/0" >> $GITHUB_ENV
      shell: bash
    - id: get-redis-url
      run: echo "redis-url={{ env.REDIS_URL }}" >> $GITHUB_OUTPUT
      shell: bash
